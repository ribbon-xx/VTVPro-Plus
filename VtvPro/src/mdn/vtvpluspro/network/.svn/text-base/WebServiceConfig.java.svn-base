/*
 * Name: $RCSfile: WebServiceConfig.java,v $
 * Version: $Revision: 1.0 $
 * Date: $Date: Oct 10, 2012 11:28:16 AM $
 *
 * Copyright (C) 2012 COMPANY_NAME, Inc. All rights reserved.
 */

package mdn.vtvpluspro.network;

import java.net.URLEncoder;

import mdn.vtvpluspro.fragment.HomeFragment;
import android.annotation.SuppressLint;

/**
 * WebServiceConfig class contains web service settings
 * 
 * @author MC
 */
@SuppressLint("DefaultLocale")
public class WebServiceConfig {

	/* ===================== WEB SERVICE CONSTANTs ===================== */
	public static int NETWORK_TIME_OUT = 60000;
	public static final String APP_API_VERSION = "1.0.0";
	public static int selectSever = 0;
//	private static final String MAIN_URL = "http://tuanda.thejupitech.com/vtvpluspro/";

	/* ===================== API URLs ===================== */

	public static String getServer() {
		if (selectSever == 0) {
//			return "http://solutions.thejupitech.com/anhhd/vtvplus/";
			return "http://tuanda.thejupitech.com/vtvpluspro/";
		} else if (selectSever == 1) {
			return "https://api.vtvplus.vn/";
		}
		return "";
	}

	public static String urlImageDefault = getServer()
			+ "files/uploads/images/no_image.png";

	public static String urlUpdateViewChannel() {
		return getServer() + "channel/update_view/";
	}

	public static String urlUpdateViewVod() {
		return getServer() + "vod/update_view/";
	}

	public static String urlUpdateViewEpisode() {
		return getServer() + "episode/update_view/";
	}

	public static String getItemOfCategory(String cateId, int offset, String userName) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("category/list/").append(cateId).append("/10/").append(offset)
				.append("/").append(HomeFragment.APP_NAME);
		strBuilder.append("?");
		if (userName != null && userName.length() > 0) {
			strBuilder.append("username=").append(userName).append("&");
		}
		strBuilder.append("platform=android");
		return strBuilder.toString();
	}

	public static String getItemOfListNew(int offset, String userName) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("category/listNew/10/").append(offset).append("/").append(HomeFragment.APP_NAME);
		strBuilder.append("?");
		if (userName != null && userName.length() > 0) {
			strBuilder.append("username=").append(userName).append("&");
		}
		strBuilder.append("platform=android");
		return strBuilder.toString();
	}
	
	public static String getItemOfListFavoursit(int offset, String userName) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("channel/favorite/").append(userName).append("/").append(HomeFragment.APP_NAME);
		strBuilder.append("/10/").append(offset);
		strBuilder.append("?").append("platform=android");;
		return strBuilder.toString();
	}
	
	public static String getItemOfListHot(int offset, String userName) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("category/listHot/10/").append(offset).append("/").append(HomeFragment.APP_NAME);
		strBuilder.append("?");
		if (userName != null && userName.length() > 0) {
			strBuilder.append("username=").append(userName).append("&");
		}
		strBuilder.append("platform=android");
		return strBuilder.toString();
	}
	
	public static String getEposideOfVod(String deviceId, String cateId,
			int offset, String userName) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("episode/all/").append(cateId).append("/10/");
		strBuilder.append(offset).append("/").append(HomeFragment.APP_NAME);
		strBuilder.append("?");
		if (userName != null && userName.length() > 0) {
			strBuilder.append("username=").append(userName).append("&");
		}
		strBuilder.append("platform=android");
		return strBuilder.toString();
	}

	public static String getListHome(String email) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("category/listHome/4/0/").append(HomeFragment.APP_NAME);
		strBuilder.append("?");
		if (email != null && email.length() > 0) {
			strBuilder.append("username=").append(email).append("&");
		}
		strBuilder.append("platform=android");
		return strBuilder.toString();
	}

	public static String checkVersionApp(String version) {
		String url = String.format(getServer() + "system/version/%s/" + HomeFragment.APP_NAME,
				version);
		return url;
	}
	
	public static String getInfoApp(String version) {
		String url = String.format(getServer() + "system/infoApp/%s/" + HomeFragment.APP_NAME,
				version);
		
		return url;
	}

	public static String getListStream(String streamId, String userName, String ip, String session, String typeNetwork, int type) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		if (type == 0) {
			strBuilder.append("api/v1/channel/stream/");
		} else if (type == 1) {
			strBuilder.append("api/v1/vod/stream/");
		} else if (type == 2) {
			strBuilder.append("api/v1/episode/stream/");
		}
		
		strBuilder.append(streamId).append("/?ip_address=").append(ip);
		if (userName != null && userName.length() > 0) {
			strBuilder.append("&username=").append(userName);
		}
		if (session != null && session.length() > 0) {
			strBuilder.append("&session=").append(session);
		}
		strBuilder.append("&type_device=android&type_network=").append(typeNetwork);
		strBuilder.append("&app_name=").append(HomeFragment.APP_NAME);
		return strBuilder.toString();
	}
	
	public static String getDetailsItemVtvPlus(String deviceId, String itemId,
			String app_name, int limit, int offset, String userName, int type) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		
		if (type == 0) {
			strBuilder.append("channel/detail/").append(deviceId).append("/");
		} else if (type == 1) {
			strBuilder.append("vod/detail/").append(deviceId).append("/");
		} else {
			strBuilder.append("episode/detail/");
		}
		strBuilder.append(itemId).append("/");
		strBuilder.append(app_name).append("/").append(limit).append("/").append(offset);
		strBuilder.append("?");
		if (userName != null && userName.length() > 0) {
			strBuilder.append("username=").append(userName).append("&");
		}
		strBuilder.append("platform=android");
		return strBuilder.toString();
	}
	
	public static String getUrlSearch(String keyword, int offset, String userName) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("channel/search/?app_name=").append(HomeFragment.APP_NAME);
		strBuilder.append("&str_search=").append(URLEncoder.encode(keyword));
		strBuilder.append("&name=1&channel=1&vod=1&limit=10&offset=").append(offset);
		strBuilder.append("&platform=android");
		if ((userName != null) && (userName.length() > 0)) {
			strBuilder.append("&username=").append(userName);
		}
		return strBuilder.toString().trim();
	}
	
	public static String getUrlLogin() {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("subscriber/login/");
		return strBuilder.toString();
	}
	
	public static String getAccountInfo(String userName, String session) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("subscriber/account_info/");
		strBuilder.append(userName).append("/");
		strBuilder.append(session).append("/");
		return strBuilder.toString();
	}

	public static String getUrlCaptcha(String challenge) {
		StringBuilder strBuilder = new StringBuilder("https://api.tvplus.mobi/vtvplus/index.php/mobiApi/app/generateCaptcha?challenge=");
		strBuilder.append(challenge);
		return strBuilder.toString();
	}
	
	public static String getUrlRegiter() {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("subscriber/register/");
		return strBuilder.toString();
	}
	
	public static String getUrlSchedule(String idChannel) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("calendar_channel/list/?channel_id=").append(idChannel);
		strBuilder.append("&full_day=1");
		return strBuilder.toString();
	}
	
	public static String getUrlUpdateRank(String idRank) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("api/v1/channel/update_rank/").append(idRank);
		strBuilder.append("/?type_device=android");
		return strBuilder.toString();
	}
	
	public static String getUrlSupport(boolean isHotro) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		if (!isHotro) {
			strBuilder.append("system/page_payment/?app_name=").append(HomeFragment.APP_NAME);
		} else {
			strBuilder.append("system/page_support/?app_name=").append(HomeFragment.APP_NAME);
		}
		return strBuilder.toString();
	}
	
	public static String getUrlLike(int type) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		if (type == 0) {
			strBuilder.append("channel/like/");
		} else if (type == 1) {
			strBuilder.append("vod/like/");
		} else if (type == 2) {
			strBuilder.append("episode/like/");
		}
		return strBuilder.toString();
	}
	
	public static String getUrlFavourist(int type) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		if (type == 0) {
			strBuilder.append("channel/favorite/");
		} else if (type == 1) {
			strBuilder.append("vod/favorite/");
		} else if (type == 2) {
			strBuilder.append("episode/favorite/");
		}
		return strBuilder.toString();
	}
	
	public static String getUrlInteractionChannel(String id) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("api/v1/channel/interaction/").append(id);
		strBuilder.append("/?app_name=").append(HomeFragment.APP_NAME);
		return strBuilder.toString();
	}
	
	public static String getUrlAllInteraction() {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("api/v1/channel/all_interaction/?app_name=").append(HomeFragment.APP_NAME);
		return strBuilder.toString();
	}
	
	public static String getUrlAds(String idAds) {
		StringBuilder strBuilder = new StringBuilder(getServer());
		strBuilder.append("/ads/detail/").append(idAds);
		return strBuilder.toString();
	}
	
	public static String getUrlLogPush(String deviceId, String messId) {
		String url = String.format(getServer() + "push/log_device/%s/%s/android",
				deviceId, messId);
		return url;
	}
	
	public static String gcmPostRegistrationId = getServer()
			+ "push/device_push/";
}